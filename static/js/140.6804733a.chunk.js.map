{"version":3,"file":"static/js/140.6804733a.chunk.js","mappings":"gPAIe,SAASA,IAAU,IAADC,EAC7BC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAzCG,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,GAAWC,EAAAA,EAAAA,SAAO,GAClBC,EAAsC,QAA/Bd,EAAGK,EAAaU,IAAI,mBAAW,IAAAf,EAAAA,EAAI,GAC1CgB,GAAWC,EAAAA,EAAAA,MAEXC,EAAgB,WAGlB,KCdO,SAA8BJ,GACzC,IACMK,EAAc,6CAAAC,OADJ,mCAC2D,aAAAA,OAC5EN,EAAO,8CAQN,OAAOO,MAAMF,EAPG,CACZG,QAAS,CACLC,OAAQ,mBACRC,cAAe,gOAKlBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,GAC/B,EDEYC,CAAqBd,GAASW,MAAK,SAACC,GAChCf,GAAakB,EAAAA,EAAAA,GAAKH,EAAII,SAC1B,GAGJ,CAFE,MAAOC,GACLC,QAAQC,IAAIF,EAChB,CACJ,EAuBA,OAbAvB,EAAAA,EAAAA,WAAS,WACAH,EAAaU,IAAI,cAIlBH,IACAM,IACAN,EAASsB,SAAU,GAGvBF,QAAQC,IAAI5B,EAAaU,IAAI,aACjC,GAAG,KAGCoB,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,QAAME,SAAU,SAACC,GACbA,EAAEC,iBACFrB,IACAN,EAASsB,SAAU,CACvB,EAAEE,SAAA,EACEI,EAAAA,EAAAA,KAAA,SACIC,KAAK,OACLC,SA9BU,SAAHC,GAA2B,IAAbC,EAAKD,EAAdE,OAASD,MACjC,GAAc,KAAVA,EACA,OAAOtC,EAAgB,CAAC,GAG5BA,EAAgB,CAAEwC,SAAUF,GAChC,EAyBgBA,MAAc,OAAP9B,QAAO,IAAPA,EAAAA,EAAW,MAEtB0B,EAAAA,EAAAA,KAAA,UAAAJ,SAAQ,eAEZI,EAAAA,EAAAA,KAAA,MAAAJ,SACK1B,GAAcA,EAAWqC,KAAI,SAACC,GAC3B,OACIR,EAAAA,EAAAA,KAAA,MAAAJ,UACII,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CACDC,GAAE,GAAA9B,OAAK4B,EAAMG,IACbC,MAAO,CAAEC,KAAMrC,GAAWoB,SAC5BY,EAAMM,SAJHN,EAAMG,GAOvB,QAIhB,C","sources":["page/Movies.jsx","tools/searchMovieByKeyWord.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport searchMovieByKeyWord from \"tools/searchMovieByKeyWord\";\n\nexport default function Movies() {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [moviesList, setMoviesList] = useState([]);\n    const canFetch = useRef(false);\n    const keyWord = searchParams.get('key_word') ?? '';\n    const location = useLocation();\n\n    const getSeatchList = () => {\n        // setSearchParams('');\n\n        try {\n            searchMovieByKeyWord(keyWord).then((res) => {\n                setMoviesList([...res.results])\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const updateQueryString = ({target: {value}}) => {\n        if (value === '') {\n            return setSearchParams({});\n        }\n\n        setSearchParams({ key_word: value });\n    }\n\n    useState(() => {\n        if (!searchParams.get('key_word')) {\n            return;\n        }\n\n        if (canFetch) {\n            getSeatchList();\n            canFetch.current = false;\n        }\n\n        console.log(searchParams.get('key_word'));\n    }, []);\n\n    return (\n        <main>\n            <form onSubmit={(e) => {\n                e.preventDefault();\n                getSeatchList();\n                canFetch.current = true;\n            }}>\n                <input\n                    type=\"text\"\n                    onChange={updateQueryString}\n                    value={keyWord ?? ''}\n                />\n                <button>Search</button>\n            </form>\n            <ul>\n                {moviesList && moviesList.map((movie) => {\n                    return (\n                        <li key={movie.id}>\n                            <Link\n                                to={`${movie.id}`}\n                                state={{ from: location }}\n                            >{movie.title}</Link>\n                        </li>\n                    );\n                })}\n            </ul>\n        </main>\n    );\n}","export default function searchMovieByKeyWord(keyWord) {\n    const API_KEY = 'dae942d7f917cb306657f0b21582727c';\n    const searchMovieURL = `https://api.themoviedb.org/3/search/movie?${API_KEY}&query\n=${keyWord}&include_adult=false&language=en-US&page=1`;\n    const options = {\n        headers: {\n            accept: 'application/json',\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYWU5NDJkN2Y5MTdjYjMwNjY1N2YwYjIxNTgyNzI3YyIsInN1YiI6IjY0Y2UxM2I0MzAzYzg1MDEzYTE0OThlMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jloHcITSMYU3dOLdrlXyzmDtDhX0pIxJmwVDJfF7NWE'\n        }\n    };\n\n    return fetch(searchMovieURL, options)\n        .then(res => res.json())\n}"],"names":["Movies","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","moviesList","setMoviesList","canFetch","useRef","keyWord","get","location","useLocation","getSeatchList","searchMovieURL","concat","fetch","headers","accept","Authorization","then","res","json","searchMovieByKeyWord","_toConsumableArray","results","error","console","log","current","_jsxs","children","onSubmit","e","preventDefault","_jsx","type","onChange","_ref","value","target","key_word","map","movie","Link","to","id","state","from","title"],"sourceRoot":""}